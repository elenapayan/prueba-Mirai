{"version":3,"sources":["components/UserForm.js","components/ShowRoom.js","components/App.js","index.js"],"names":["UserForm","props","handleChangeHotel","ev","handleChange","hotelId","target","id","Fragment","className","action","method","htmlFor","type","name","value","required","onChange","checkin","min","max","nights","placeholder","to","onClick","handleSearch","ShowRoom","showResults","validatedForm","data","cheapestRoom","sort","a","b","netPrice","roomName","offerName","boardName","occupancy","numAdults","numChilds","numBabies","handleReset","App","state","bind","this","parseInt","split","join","f","Date","year","getFullYear","toString","month","getMonth","length","day","getDate","setState","formValidated","reverse","url","fetch","headers","btoa","then","response","json","availableRates","console","log","exact","path","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f66748e5.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction UserForm(props) {\n\n  function handleChangeHotel(ev) {\n    props.handleChange({\n      hotelId: ev.target.id\n    });\n  }\n\n  function handleChangeDate(ev) {\n    props.handleChange({\n      checkin: ev.target.value\n    });\n  }\n\n  function handleChangeNights(ev) {\n    props.handleChange({\n      nights: ev.target.value\n    });\n  }\n\n  return (\n    <React.Fragment>\n      <form className=\"form-container\" action=\"\" method=\"get\">\n        <fieldset className=\"form-group\">\n          <div className=\"row\">\n            <legend className=\"col-form-label col-sm-2 pt-0\">Elige hotel:</legend>\n            <div className=\"col-sm-10\">\n              <div className=\"form-check\">\n                <label className=\"form-check-label\" htmlFor=\"44069509\">\n                  <input\n                    type=\"radio\"\n                    className=\"form-check-input\"\n                    id=\"44069509\"\n                    name=\"hotel\"\n                    value={props.hotelId}\n                    required\n                    onChange={handleChangeHotel}\n                  />\n                  Hotel Baqueira Val de Neu</label>\n              </div>\n              <div className=\"form-check\">\n                <label className=\"form-check-label\" htmlFor=\"10030559\">\n                  <input\n                    type=\"radio\"\n                    className=\"form-check-input\"\n                    id=\"10030559\"\n                    name=\"hotel\"\n                    value={props.hotelId}\n                    required\n                    onChange={handleChangeHotel}\n                  />\n                  Hotel Moderno</label>\n              </div>\n              <div className=\"form-check\">\n                <label className=\"form-check-label\" htmlFor=\"100376478\">\n                  <input\n                    type=\"radio\"\n                    className=\"form-check-input\"\n                    id=\"100376478\"\n                    name=\"hotel\"\n                    value={props.hotelId}\n                    required\n                    onChange={handleChangeHotel}\n                  />\n                  Hotel Grand Luxor</label>\n              </div>\n            </div>\n          </div>\n        </fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\" htmlFor=\"date-checkIn\">Fecha del check-in</label>\n          <div className=\"col-sm-10\">\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              id=\"date-checkIn\"\n              name=\"date-checkIn\"\n              value={props.checkin}\n              required\n              onChange={handleChangeDate}\n            />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\" htmlFor=\"nights\">Número de noches</label>\n          <div className=\"col-sm-10\">\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"nights\"\n              name=\"nights\"\n              min=\"1\"\n              max=\"30\"\n              value={props.nights}\n              placeholder=\"Ej: 1\"\n              required\n              onChange={handleChangeNights}\n            />\n          </div>\n        </div>\n      </form >\n      <div className=\"form-group row\">\n        <div className=\"col-sm-10\">\n          <Link to=\"/ShowRoom\">\n            <button className=\"btn btn-primary\" onClick={props.handleSearch}>Buscar</button>\n          </Link>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default UserForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction ShowRoom(props) {\n  if (!props.showResults && !!props.validatedForm) return <p>Loading..</p>\n  if (props.data) {\n    const cheapestRoom = props.data.sort((a, b) => a.netPrice - b.netPrice)[0];\n    return (\n      <React.Fragment>\n        <div className=\"card\">\n          <div className=\"list-group-item\">\n            <h3 className=\"list-group-item\">Habitación: {cheapestRoom.roomName}</h3>\n            <p className=\"list-group-item\">Oferta: {cheapestRoom.offerName ? cheapestRoom.offerName : \"No hay oferta disponible\"}</p>\n            <p className=\"list-group-item\">Régimen: {cheapestRoom.boardName}</p>\n            <div className=\"list-group-item\">Ocupación:\n            <p className=\"occupancy-item\">Adultos: {cheapestRoom.occupancy.numAdults}</p>\n              <p className=\"occupancy-item\">Niños: {cheapestRoom.occupancy.numChilds}</p>\n              <p className=\"occupancy-item\">Bebés: {cheapestRoom.occupancy.numBabies}</p>\n            </div>\n            <p className=\"list-group-item\">Precio: {cheapestRoom.netPrice}€</p>\n          </div>\n        </div>\n        <Link to=\"/\">\n          <button className=\"btn btn-secondary\" onClick={props.handleReset}>Volver</button>\n        </Link>\n      </React.Fragment>\n    )\n  } else {\n    return (\n      <div>\n        <p className=\"error-msg\">Lo sentimos, no hay tarifas disponibles</p>\n        <Link to=\"/\">\n          <button className=\"btn btn-secondary\" onClick={props.handleReset}>Volver</button>\n        </Link>\n      </div>\n\n    )\n  }\n}\n\nexport default ShowRoom;\n","import React from 'react';\nimport '../stylesheets/App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport UserForm from './UserForm';\nimport ShowRoom from './ShowRoom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: false,\n      hotelId: \"\",\n      checkin: \"\",\n      nights: \"\",\n      validatedForm: \"\",\n      showResults: false\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  formValidated() {\n    const hotelId = this.state.hotelId;\n    const nights = parseInt(this.state.nights);\n    let checkin = this.state.checkin;\n    checkin = checkin.split(\"-\").join(\"\");\n    const f = new Date();\n    const year = (f.getFullYear()).toString();\n    let month = (f.getMonth() + 1).toString();\n    if (month.length < 2) {\n      month = \"0\" + month;\n    }\n    const day = f.getDate().toString();\n    const date = (year + month + day);\n    if (hotelId && (checkin >= date) && (nights >= 1) && (nights <= 30)) {\n      this.setState({\n        validatedForm: true\n      });\n    } else {\n      this.setState({\n        validatedForm: false\n      });\n    }\n  }\n\n  handleChange(data) {\n    this.setState(data, () => {\n      this.formValidated();\n    })\n  }\n\n  handleSearch() {\n    const hotelId = parseInt(this.state.hotelId);\n    const nights = parseInt(this.state.nights);\n    const checkin = (this.state.checkin).split(\"-\").reverse().join(\"/\");\n    const url = `https://api-pre.mirai.com/MiraiWebService/availableRate/get?hotelId=${hotelId}&checkin=${checkin}&nights=${nights}`;\n    if (!!this.state.validatedForm === true) {\n      fetch(url, {\n        headers: { 'Authorization': `Basic ${btoa('user1:user1Pass')}` }\n      })\n        .then((response) => response.json())\n        .then(data => {\n          if (data.availableRates[hotelId]) {\n            this.setState({\n              data: data.availableRates[hotelId],\n              showResults: true\n            });\n          } else {\n            this.setState({\n              data: false,\n              showResults: false\n            });\n          }\n        })\n    } else {\n      this.setState({\n        data: false,\n        showResults: false\n      });\n    }\n  }\n\n  handleReset() {\n    this.setState({\n      data: [],\n      hotelId: \"\",\n      checkin: \"\",\n      nights: \"\",\n      validatedForm: \"\"\n    });\n  }\n\n  render() {\n    console.log(this.state.data);\n    console.log(this.state.validatedForm)\n    return (\n      <React.Fragment>\n        <Switch>\n          <Route exact path=\"/\">\n            <UserForm handleChange={this.handleChange} hotelId={this.state.hotelId} checkin={this.state.checkin} nights={this.state.nights} handleSearch={this.handleSearch} />\n          </Route>\n          <Route path=\"/ShowRoom\">\n            <ShowRoom data={this.state.data} showResults={this.state.showResults} validatedForm={this.state.validatedForm} handleReset={this.handleReset} />\n          </Route>\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}